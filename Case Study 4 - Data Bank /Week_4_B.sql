-- Techniques
-- Common Table Expressions
-- End of month calculations
-- Running sums and conditional aggregations

-- What is the unique count and total amount for each transaction type?
SELECT txn_type, SUM(txn_amount) as TOTAL_AMOUNT, COUNT(*) AS UNIQUE_COUNT 
FROM CUSTOMER_TRANSACTIONS
GROUP BY txn_type;

-- What is the average total historical deposit counts and amounts for all customers?
WITH CTE AS(
    SELECT COUNT(txn_type) AS DEPOSIT_COUNT, CUSTOMER_ID
    FROM CUSTOMER_TRANSACTIONS
    GROUP BY CUSTOMER_ID
)

SELECT AVG(DEPOSIT_COUNT)
FROM CTE;

-- For each month - how many Data Bank customers make more than 1 deposit and either 1 purchase or 1 withdrawal in a single month?
WITH CTE AS(
    SELECT DATE_TRUNC('month', txn_date) AS MONTH, CUSTOMER_ID
    ,SUM(
    CASE 
    WHEN txn_type = 'deposit'
    THEN 1
    END) AS DEPOSITS
    ,SUM(
    CASE 
    WHEN txn_type = 'puchase'
    THEN 1
    END) AS PURCHASES
    ,SUM(
    CASE 
    WHEN txn_type = 'withdrawal'
    THEN 1
    END) AS WITHDRAWALS
    FROM CUSTOMER_TRANSACTIONS
    GROUP BY MONTH, CUSTOMER_ID
)

SELECT MONTH,
COUNT(CASE 
WHEN DEPOSITS > 1
AND (PURCHASES = 1
OR WITHDRAWALS = 1)
THEN CUSTOMER_ID
END) AS COUNT
FROM CTE
GROUP BY MONTH;

-- What is the closing balance for each customer at the end of the month?
WITH CTE AS(
    SELECT DATE_TRUNC('month', txn_date) AS MONTH, CUSTOMER_ID,
    SUM(CASE 
        WHEN txn_type = 'deposit'
        THEN txn_amount
        ELSE -txn_amount
        END) AS BALANCE
    FROM CUSTOMER_TRANSACTIONS
    GROUP BY MONTH, CUSTOMER_ID
)

 , DATA AS(
    SELECT 
    DATEADD('day',-1,DATEADD('month',1,MONTH)) AS MONTH_END, CUSTOMER_ID,
    SUM(BALANCE) OVER(PARTITION BY CUSTOMER_ID ORDER BY MONTH ASC) AS BALANCE
    FROM CTE
    ORDER BY CUSTOMER_ID, MONTH_END
)

, MONTHS AS(
    SELECT MONTH_END
    FROM DATA
)

, ALL_MONTHS_CUSTOMERS AS(
    SELECT CUSTOMER_ID, MONTHS.MONTH_END
    FROM DATA
    CROSS JOIN MONTHS
    GROUP BY CUSTOMER_ID, MONTHS.MONTH_END
)

, ALL_DATA AS(
    SELECT DATA.*EXCLUDE(BALANCE, CUSTOMER_ID, MONTH_END), ALL_MONTHS_CUSTOMERS.*, COALESCE(BALANCE, LAG(BALANCE) OVER(PARTITION BY ALL_MONTHS_CUSTOMERS.CUSTOMER_ID ORDER BY ALL_MONTHS_CUSTOMERS.MONTH_END)) AS BALANCE
    FROM DATA
    RIGHT JOIN ALL_MONTHS_CUSTOMERS ON ALL_MONTHS_CUSTOMERS.CUSTOMER_ID = DATA.CUSTOMER_ID
    AND ALL_MONTHS_CUSTOMERS.MONTH_END = DATA.MONTH_END
)

-- What is the percentage of customers who increase their closing balance by more than 5%?
, PERCENT_INCREASE AS(
    SELECT *, LAG(BALANCE) OVER(PARTITION BY CUSTOMER_ID ORDER BY MONTH_END ASC) AS PREVIOUS_BALANCE, DIV0((BALANCE - PREVIOUS_BALANCE),PREVIOUS_BALANCE) AS PERCENT_INCREASE
    FROM DATA
    ORDER BY CUSTOMER_ID, MONTH_END
)

, ALL_CUSTOMERS AS(
SELECT MONTH_END, COUNT(CUSTOMER_ID) AS ALL_CUSTOMERS
FROM PERCENT_INCREASE
GROUP BY MONTH_END)

, CUSTOMER_INCREASE AS(SELECT MONTH_END, COUNT(CUSTOMER_ID) AS SELECTED_CUSTOMERS
FROM PERCENT_INCREASE
WHERE PERCENT_INCREASE >= 0.05
GROUP BY MONTH_END)

SELECT ALL_CUSTOMERS.MONTH_END, SELECTED_CUSTOMERS/ALL_CUSTOMERS * 100 AS PERCENT
FROM ALL_CUSTOMERS
INNER JOIN CUSTOMER_INCREASE ON ALL_CUSTOMERS.MONTH_END = CUSTOMER_INCREASE.MONTH_END
